---
import { getAllPostsWithReadingTime } from "@/modules/post/common";
import List from "@/layouts/List.astro";
import PostList from "@/components/PostList.astro";
import { CONFIG_CLIENT } from "@/config/client";
import { getPageMetadata } from "@/utils/content/metadata";
import { pickPaginationPropsFromPage } from "@/utils/content/pagination";
import { SUPPORTED_LOCALES } from "@/config/i18n";

import type { Post } from "@/types/post";
import type { GetStaticPathsOptions } from "astro";

// [page].astro and getStaticPaths because of pagination
export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allPosts: Post[] = await getAllPostsWithReadingTime();
  console.log(`博客列表页 - 获取到文章数: ${allPosts.length}`);
  const pageSize = CONFIG_CLIENT.PAGE_SIZE_POST_CARD;

  const paths = [];

  // 为每种语言创建分页路由
  for (const lang of SUPPORTED_LOCALES) {
    console.log(`为 ${lang} 语言创建博客列表页`);

    // 创建该语言的分页路径
    const paginatedPaths = paginate(allPosts, {
      pageSize,
      params: { lang },
    });

    // 添加额外的第一页路由 (例如 /zh/blog/1/)
    paginatedPaths.push({
      params: { lang, page: "1" },
      props: paginatedPaths[0].props,
    });

    // 添加到总路径数组
    paths.push(...paginatedPaths);
  }

  console.log(`博客列表页 - 总共生成 ${paths.length} 条路由`);
  return paths;
}

// page from pagination
const { page } = Astro.props;
const { data: posts } = page;

const paginationProps = pickPaginationPropsFromPage(page);

// get current language
const { lang } = Astro.params;

// get page metadata
const metadata = getPageMetadata("lists/blog");

const layoutProps = { metadata, paginationProps };
---

<List {...layoutProps}>
  <PostList posts={posts} lang={lang} />
</List>
