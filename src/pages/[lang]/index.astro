---
import { Image } from "astro:assets";

import { getPageMetadata } from "@/utils/content/metadata";
import { cn } from "@/utils/ui/styles";
import * as m from "@/paraglide/messages";
import { getPathWithLocale } from "@/utils/routing/paths";

import { SUPPORTED_LOCALES } from "@/config/i18n";
import { CONFIG_CLIENT } from "@/config/client";
import { ROUTES } from "@/constants/routes";
import heroImage from "@/assets/images/hero-default.png";

import Centered from "@/layouts/Centered.astro";

import { FallingText } from "@/components/react/ui/FallingText";
import { HeroContactLinks } from "@/components/react/app/home/HeroContactLinks";
import { HeroBanner } from "@/components/react/app/home/HeroBanner";
import { QuickLinksSection } from "@/components/react/app/home/QuickLinksSection";
import { FadeUpAnimation } from "@/components/react/ui/FadeUpAnimation";
import { GlassCard } from "@/components/react/ui/GlassCard";
import { ScrollArea, ScrollBar } from "@/components/react/radix-ui/Scroll";
import { SimpleScrollArea } from "@/components/react/ui/SimpleScrollArea";

import ReactIcon from "@/assets/icons/reactIcon.astro";
import TailwindIcon from "@/assets/icons/tailwindIcon.astro";
import CssIcon from "@/assets/icons/cssIcon.astro";
import JavascriptIcon from "@/assets/icons/javascriptIcon.astro";
import TypescriptIcon from "@/assets/icons/typescriptIcon.astro";
import SolidityIcon from "@/assets/icons/solidityIcon.astro";
import AntdIcon from "@/assets/icons/antdIcon.astro";
import NextjsIcon from "@/assets/icons/nextjsIcon.astro";
import AstroIcon from "@/assets/icons/astroIcon.astro";
import NodejsIcon from "@/assets/icons/nodejsIcon.astro";

export async function getStaticPaths() {
  return SUPPORTED_LOCALES.map((lang) => ({
    params: { lang },
  }));
}

const { lang } = Astro.params;

// 获取页面metadata（使用空字符串作为首页的key）
const metadata = getPageMetadata("");

const blogPath = getPathWithLocale(ROUTES.BLOG);

const quickLinks = [
  { name: "Blog", href: getPathWithLocale(ROUTES.BLOG), icon: "↗" },
  { name: "Explore", href: getPathWithLocale(ROUTES.EXPLORE), icon: "↗" },
  { name: "Projects", href: getPathWithLocale(ROUTES.PROJECTS), icon: "↗" },
  { name: "About", href: getPathWithLocale(ROUTES.ABOUT), icon: "↗" },
  { name: "Contact", href: getPathWithLocale(ROUTES.CONTACT), icon: "↗" },
];

const socialLinks = {
  email: CONFIG_CLIENT.AUTHOR_EMAIL,
  github: CONFIG_CLIENT.AUTHOR_GITHUB,
  twitter: CONFIG_CLIENT.AUTHOR_TWITTER,
  linkedin: CONFIG_CLIENT.AUTHOR_LINKEDIN,
};
---

<!-- TODO: FIX i18n -->
<Centered {metadata} className="flex-col-layout first:gap-0 gap-8 md:gap-16">
  <!-- Hero Page Section -->
  <section
    id="hero-page-section"
    aria-label="hero-page-section"
    class="flex-col-layout mode-theme-switch bg-surface-container rounded-sm"
  >
    <div
      id="hero-page-wrapper"
      aria-label="hero-page-wrapper"
      class="grid grid-cols-1 lg:grid-cols-2 gap-8 p-4 min-h-[60vh] items-center"
    >
      <div id="hero-page-content" class="flex flex-col gap-4">
        <HeroBanner blogPath={blogPath} client:only="react" />
        <HeroContactLinks socialLinks={socialLinks} client:only="react" />
      </div>
      <div
        id="hero-page-image"
        aria-label="hero-page-image"
        class="hidden lg:flex items-center justify-center w-full h-full max-w-md max-h-[500px] mx-auto"
      >
        <Image
          src={heroImage}
          alt="Hero page illustration"
          width={400}
          height={500}
          class="w-full h-auto object-contain rounded-lg shadow-lg"
          loading="eager"
          decoding="async"
        />
      </div>
    </div>
  </section>

  <!-- Quick Links Section -->
  <section id="quick-links" aria-label="quick-links" class="flex-col-layout mode-theme-switch">
    <FadeUpAnimation title="Quick Links" client:visible>
      <QuickLinksSection links={quickLinks} client:only="react" />
    </FadeUpAnimation>
  </section>

  <!-- Falling Text Section -->
  <!-- <section
    id="falling-text"
    aria-label="falling-text"
    class={cn("flex justify-center items-center h-[30vh] w-full")}
  >
    <FallingText
      text={m["pages.home.falling_text"]()}
      highlightWords={["ideas", "share"]}
      highlightClass="highlighted"
      trigger="hover"
      wireframes={false}
      gravity={0.3}
      fontSize="2rem"
      mouseConstraintStiffness={0.9}
      client:only="react"
    />
  </section> -->

  <!-- Tech Stacks Preview Section -->
  <section
    id="tech-stacks-preview"
    aria-label="tech-stacks-preview"
    class={cn("flex-col-layout mode-theme-switch w-full")}
  >
    <FadeUpAnimation title="My Tech Stacks" client:visible>
      <!-- 小屏幕时使用ScrollArea -->
      <div class="lg:hidden space-y-4">
        <!-- Radix UI ScrollArea 测试 -->
        <div>
          <h3 style={{ color: "var(--color-on-surface)", marginBottom: "8px" }}>
            Radix UI ScrollArea:
          </h3>
          <ScrollArea style={{ height: "400px", width: "100%" }} scrollbars="vertical">
            <div class="flex flex-col gap-4 w-full p-4" style={{ minHeight: "1200px" }}>
              <div
                style={{
                  height: "100px",
                  backgroundColor: "var(--color-primary)",
                  color: "var(--color-on-primary)",
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                  borderRadius: "8px",
                }}
              >
                Radix UI - 顶部
              </div>
              <div
                style={{
                  height: "100px",
                  backgroundColor: "var(--color-secondary)",
                  color: "var(--color-on-secondary)",
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                  borderRadius: "8px",
                }}
              >
                Radix UI - 中间
              </div>
              <div
                style={{
                  height: "100px",
                  backgroundColor: "var(--color-tertiary)",
                  color: "var(--color-on-tertiary)",
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                  borderRadius: "8px",
                }}
              >
                Radix UI - 底部
              </div>
            </div>
          </ScrollArea>
        </div>

        <!-- Simple ScrollArea 测试 -->
        <div>
          <h3 style={{ color: "var(--color-on-surface)", marginBottom: "8px" }}>
            Simple ScrollArea:
          </h3>
          <SimpleScrollArea height="400px" scrollbars="vertical" client:only="react">
            <div class="flex flex-col gap-4 w-full p-4" style={{ minHeight: "1200px" }}>
              <div
                style={{
                  height: "100px",
                  backgroundColor: "var(--color-primary)",
                  color: "var(--color-on-primary)",
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                  borderRadius: "8px",
                }}
              >
                Simple - 顶部
              </div>
              <div
                style={{
                  height: "100px",
                  backgroundColor: "var(--color-secondary)",
                  color: "var(--color-on-secondary)",
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                  borderRadius: "8px",
                }}
              >
                Simple - 中间
              </div>
              <div
                style={{
                  height: "100px",
                  backgroundColor: "var(--color-tertiary)",
                  color: "var(--color-on-tertiary)",
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                  borderRadius: "8px",
                }}
              >
                Simple - 底部
              </div>
              <GlassCard
                title="Astro"
                content="Astro is a static site builder for the modern web. It's fast, flexible, and easy to use."
                icon="astro"
              >
                <AstroIcon />
              </GlassCard>
              <GlassCard
                title="React"
                content="React is a JavaScript library for building user interfaces. It's fast, flexible, and easy to use."
                icon="react"
              >
                <ReactIcon />
              </GlassCard>
              <GlassCard
                title="Tailwind"
                content="Tailwind is a utility-first CSS framework for rapidly building custom user interfaces. It's fast, flexible, and easy to use."
                icon="tailwind"
              >
                <TailwindIcon />
              </GlassCard>
              <GlassCard
                title="CSS"
                content="CSS is a stylesheet language that describes the presentation of a document written in HTML. It's fast, flexible, and easy to use."
                icon="css"
              >
                <CssIcon />
              </GlassCard>
              <GlassCard
                title="JavaScript"
                content="JavaScript is a programming language that allows you to implement complex features on web pages. It's fast, flexible, and easy to use."
                icon="javascript"
              >
                <JavascriptIcon />
              </GlassCard>
              <GlassCard
                title="TypeScript"
                content="TypeScript is a superset of JavaScript that adds static typing. It's fast, flexible, and easy to use."
                icon="typescript"
              >
                <TypescriptIcon />
              </GlassCard>
              <GlassCard
                title="Solidity"
                content="Solidity is a programming language for writing smart contracts. It's fast, flexible, and easy to use."
                icon="solidity"
              >
                <SolidityIcon />
              </GlassCard>
              <GlassCard
                title="Ant Design"
                content="Ant Design is a design system for React. It's fast, flexible, and easy to use."
                icon="antd"
              >
                <AntdIcon />
              </GlassCard>
              <GlassCard
                title="Next.js"
                content="Next.js is a React framework for building server-side rendered and static web applications. It's fast, flexible, and easy to use."
                icon="nextjs"
              >
                <NextjsIcon />
              </GlassCard>
              <GlassCard
                title="Node.js"
                content="Node.js is a runtime environment for executing JavaScript code outside of a browser. It's fast, flexible, and easy to use."
                icon="nodejs"
              >
                <NodejsIcon />
              </GlassCard>
              <!-- 测试滚动内容结束 -->
              <div
                style={{
                  height: "100px",
                  backgroundColor: "var(--color-secondary)",
                  color: "var(--color-on-secondary)",
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                  borderRadius: "8px",
                }}
              >
                滚动测试 - 底部
              </div>
            </div>
          </SimpleScrollArea>
        </div>

        <!-- 大屏幕时使用普通grid -->
        <div
          class="hidden lg:grid grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-2 w-full place-items-center"
        >
          <GlassCard
            title="Astro"
            content="Astro is a static site builder for the modern web. It's fast, flexible, and easy to use."
            icon="astro"
          >
            <AstroIcon />
          </GlassCard>
          <GlassCard
            title="React"
            content="React is a JavaScript library for building user interfaces. It's fast, flexible, and easy to use."
            icon="react"
          >
            <ReactIcon />
          </GlassCard>
          <GlassCard
            title="Tailwind"
            content="Tailwind is a utility-first CSS framework for rapidly building custom user interfaces. It's fast, flexible, and easy to use."
            icon="tailwind"
          >
            <TailwindIcon />
          </GlassCard>
          <GlassCard
            title="CSS"
            content="CSS is a stylesheet language that describes the presentation of a document written in HTML. It's fast, flexible, and easy to use."
            icon="css"
          >
            <CssIcon />
          </GlassCard>
          <GlassCard
            title="JavaScript"
            content="JavaScript is a programming language that allows you to implement complex features on web pages. It's fast, flexible, and easy to use."
            icon="javascript"
          >
            <JavascriptIcon />
          </GlassCard>
          <GlassCard
            title="TypeScript"
            content="TypeScript is a superset of JavaScript that adds static typing. It's fast, flexible, and easy to use."
            icon="typescript"
          >
            <TypescriptIcon />
          </GlassCard>
          <GlassCard
            title="Solidity"
            content="Solidity is a programming language for writing smart contracts. It's fast, flexible, and easy to use."
            icon="solidity"
          >
            <SolidityIcon />
          </GlassCard>
          <GlassCard
            title="Ant Design"
            content="Ant Design is a design system for React. It's fast, flexible, and easy to use."
            icon="antd"
          >
            <AntdIcon />
          </GlassCard>
          <GlassCard
            title="Next.js"
            content="Next.js is a React framework for building server-side rendered and static web applications. It's fast, flexible, and easy to use."
            icon="nextjs"
          >
            <NextjsIcon />
          </GlassCard>
          <GlassCard
            title="Node.js"
            content="Node.js is a runtime environment for executing JavaScript code outside of a browser. It's fast, flexible, and easy to use."
            icon="nodejs"
          >
            <NodejsIcon />
          </GlassCard>
        </div>
      </div>
    </FadeUpAnimation>
  </section>

  <!-- TODO: Projects Preview Section -->
  <!-- Projects Section -->
  <section
    id="projects-preview"
    aria-label="projects-preview"
    class={cn("flex-col-layout mode-theme-switch bg-surface-container")}
  >
  </section>
</Centered>
